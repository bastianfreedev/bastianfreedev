import { __decorate, __extends } from "tslib";
import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';
import { reaction } from 'mobx';
import { MobxAutorunDirective } from './mobx-autorun.directive';
var MobxReactionDirective = /** @class */ (function (_super) {
    __extends(MobxReactionDirective, _super);
    function MobxReactionDirective(templateRef, viewContainer) {
        var _this = _super.call(this, templateRef, viewContainer) || this;
        _this.templateRef = templateRef;
        _this.viewContainer = viewContainer;
        return _this;
    }
    MobxReactionDirective.prototype.autoDetect = function (view) {
        this.dispose = reaction(this.mobxReaction, function () {
            view.detectChanges();
        }, { fireImmediately: true });
    };
    MobxReactionDirective.ctorParameters = function () { return [
        { type: TemplateRef },
        { type: ViewContainerRef }
    ]; };
    __decorate([
        Input()
    ], MobxReactionDirective.prototype, "mobxReaction", void 0);
    MobxReactionDirective = __decorate([
        Directive({ selector: '[mobxReaction]' })
    ], MobxReactionDirective);
    return MobxReactionDirective;
}(MobxAutorunDirective));
export { MobxReactionDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9ieC1yZWFjdGlvbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tb2J4LWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvbW9ieC1yZWFjdGlvbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBR2hFO0lBQTJDLHlDQUFvQjtJQUc3RCwrQkFDWSxXQUE2QixFQUM3QixhQUErQjtRQUYzQyxZQUlFLGtCQUFNLFdBQVcsRUFBRSxhQUFhLENBQUMsU0FDbEM7UUFKVyxpQkFBVyxHQUFYLFdBQVcsQ0FBa0I7UUFDN0IsbUJBQWEsR0FBYixhQUFhLENBQWtCOztJQUczQyxDQUFDO0lBRUQsMENBQVUsR0FBVixVQUFXLElBQUk7UUFDYixJQUFJLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FDckIsSUFBSSxDQUFDLFlBQVksRUFDakI7WUFDRSxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDdkIsQ0FBQyxFQUNELEVBQUUsZUFBZSxFQUFFLElBQUksRUFBRSxDQUMxQixDQUFDO0lBQ0osQ0FBQzs7Z0JBZHdCLFdBQVc7Z0JBQ1QsZ0JBQWdCOztJQUpsQztRQUFSLEtBQUssRUFBRTsrREFBYztJQURYLHFCQUFxQjtRQURqQyxTQUFTLENBQUMsRUFBRSxRQUFRLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQztPQUM3QixxQkFBcUIsQ0FtQmpDO0lBQUQsNEJBQUM7Q0FBQSxBQW5CRCxDQUEyQyxvQkFBb0IsR0FtQjlEO1NBbkJZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgVmlld0NvbnRhaW5lclJlZiwgVGVtcGxhdGVSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyByZWFjdGlvbiB9IGZyb20gJ21vYngnO1xuaW1wb3J0IHsgTW9ieEF1dG9ydW5EaXJlY3RpdmUgfSBmcm9tICcuL21vYngtYXV0b3J1bi5kaXJlY3RpdmUnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbbW9ieFJlYWN0aW9uXScgfSlcbmV4cG9ydCBjbGFzcyBNb2J4UmVhY3Rpb25EaXJlY3RpdmUgZXh0ZW5kcyBNb2J4QXV0b3J1bkRpcmVjdGl2ZSB7XG4gIEBJbnB1dCgpIG1vYnhSZWFjdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4sXG4gICAgcHJvdGVjdGVkIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWZcbiAgKSB7XG4gICAgc3VwZXIodGVtcGxhdGVSZWYsIHZpZXdDb250YWluZXIpO1xuICB9XG5cbiAgYXV0b0RldGVjdCh2aWV3KSB7XG4gICAgdGhpcy5kaXNwb3NlID0gcmVhY3Rpb24oXG4gICAgICB0aGlzLm1vYnhSZWFjdGlvbixcbiAgICAgICgpID0+IHtcbiAgICAgICAgdmlldy5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgICB9LFxuICAgICAgeyBmaXJlSW1tZWRpYXRlbHk6IHRydWUgfVxuICAgICk7XG4gIH1cbn1cbiJdfQ==