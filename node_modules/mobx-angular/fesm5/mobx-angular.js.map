{"version":3,"file":"mobx-angular.js","sources":["ng://mobx-angular/lib/mobx-autorun.directive.ts","ng://mobx-angular/lib/mobx-reaction.directive.ts","ng://mobx-angular/lib/mobx-angular.module.ts","ng://mobx-angular/public-api.ts","ng://mobx-angular/mobx-angular.ts"],"sourcesContent":["import {\n  Directive,\n  ViewContainerRef,\n  TemplateRef,\n  OnInit,\n  OnDestroy,\n  Input,\n  EmbeddedViewRef\n} from '@angular/core';\nimport { autorun } from 'mobx';\n// import { mobxAngularDebug } from '../utils/mobx-angular-debug';\n\n@Directive({ selector: '[mobxAutorun]' })\nexport class MobxAutorunDirective implements OnInit, OnDestroy {\n  protected templateBindings = {};\n  protected dispose: any;\n  protected view: EmbeddedViewRef<any>;\n  @Input() mobxAutorun;\n\n  constructor(\n    protected templateRef: TemplateRef<any>,\n    protected viewContainer: ViewContainerRef\n  ) {}\n\n  ngOnInit() {\n    this.view = this.viewContainer.createEmbeddedView(this.templateRef);\n\n    if (this.dispose) {\n      this.dispose();\n    }\n\n    if (this.shouldDetach()) {\n      this.view.detach();\n    }\n    this.autoDetect(this.view);\n    // mobxAngularDebug(this.view, this.dispose);\n  }\n\n  shouldDetach() {\n    return this.mobxAutorun && this.mobxAutorun.detach;\n  }\n\n  autoDetect(view: EmbeddedViewRef<any>) {\n    this.dispose = autorun(() => view.detectChanges());\n  }\n\n  ngOnDestroy() {\n    if (this.dispose) {\n      this.dispose();\n    }\n  }\n}\n","import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';\nimport { reaction } from 'mobx';\nimport { MobxAutorunDirective } from './mobx-autorun.directive';\n\n@Directive({ selector: '[mobxReaction]' })\nexport class MobxReactionDirective extends MobxAutorunDirective {\n  @Input() mobxReaction;\n\n  constructor(\n    protected templateRef: TemplateRef<any>,\n    protected viewContainer: ViewContainerRef\n  ) {\n    super(templateRef, viewContainer);\n  }\n\n  autoDetect(view) {\n    this.dispose = reaction(\n      this.mobxReaction,\n      () => {\n        view.detectChanges();\n      },\n      { fireImmediately: true }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MobxAutorunDirective } from './mobx-autorun.directive';\nimport { MobxReactionDirective } from './mobx-reaction.directive';\n\nconst DIRECTIVES = [MobxAutorunDirective, MobxReactionDirective];\n@NgModule({\n  declarations: DIRECTIVES,\n  exports: DIRECTIVES\n})\nexport class MobxAngularModule {}\n","/*\n * Public API Surface of mobx-angular\n */\n\nimport { action as mobxAction } from 'mobx';\nimport { computed as mobxComputed } from 'mobx';\nimport { observable as mobxObservable } from 'mobx';\n\nexport * from './lib/mobx-autorun.directive';\nexport * from './lib/mobx-reaction.directive';\nexport * from './lib/mobx-angular.module';\n\n// Re-export mobx operators to be able to use inside components with AOT:\nexport function actionInternal(...args) {\n  return (mobxAction as any)(...args);\n}\nexport const action: typeof mobxAction = Object.assign(\n  actionInternal,\n  mobxAction\n) as any;\n\nfunction computedInternal(...args) {\n  return (mobxComputed as any)(...args);\n}\nexport const computed: typeof mobxComputed = Object.assign(\n  computedInternal,\n  mobxComputed\n) as any;\n\nfunction observableInternal(...args) {\n  return (mobxObservable as any)(...args);\n}\n\nexport const observable: typeof mobxObservable = Object.assign(\n  observableInternal,\n  mobxObservable\n) as any;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["mobxAction","mobxComputed","mobxObservable"],"mappings":"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"}